/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.2.v20140723
 * Generated at: 2014-09-15 21:46:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sortorder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/Users/mjenniso/.m2/repository/org/springframework/spring-webmvc/3.2.0.RELEASE/spring-webmvc-3.2.0.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1355412946000L));
    _jspx_dependants.put("file:/Users/mjenniso/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.1/taglibs-standard-impl-1.2.1.jar", Long.valueOf(1409783355000L));
    _jspx_dependants.put("file:/Users/mjenniso/.m2/repository/org/springframework/spring-webmvc/3.2.0.RELEASE/spring-webmvc-3.2.0.RELEASE.jar", Long.valueOf(1410200254000L));
    _jspx_dependants.put("jar:file:/Users/mjenniso/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.1/taglibs-standard-impl-1.2.1.jar!/META-INF/c.tld", Long.valueOf(1384397262000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("    <link rel=\"stylesheet\"\n");
      out.write("        href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\">\n");
      out.write("\n");
      out.write("    <script\tsrc=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.1/angular.min.js\"></script>\n");
      out.write("    <script src=\"/resource/js/controllers.js\"></script>\n");
      out.write("    <title>Order</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("    \t<section class=\"container\" ng-app=\"sortOrderApp\">\n");
      out.write("    \t\t<div ng-controller=\"sortOrderCtrl\">\n");
      out.write("\n");
      out.write("            <div class=\"jumbotron\">\n");
      out.write("                <div class=\"container\">\n");
      out.write("                    <h1>Name: {{header.nameGen}} </h1>\n");
      out.write("                    <p>Order Number:  {{header.orderNum}} </p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("                <div>\n");
      out.write("    \t\t\t\t<a class=\"btn btn-lg btn-success btn-block\"\n");
      out.write("    \t\t\t\t\tng-click=\"randomOrder()\">Sort Random Order\n");
      out.write("    \t\t\t\t</a>\n");
      out.write("    \t\t\t</div>\n");
      out.write("    \t\t\t<div>\n");
      out.write("    \t\t\t    <br>\n");
      out.write("    \t\t\t    <h1 ng-repeat=\"box in order.boxes\">Box {{box.boxId}}\n");
      out.write("                        <table class=\"table table-hover\">\n");
      out.write("                            <tr>\n");
      out.write("                                <th>Item Name</th>\n");
      out.write("                                <th>Item Type</th>\n");
      out.write("                                <th>SKU#</th>\n");
      out.write("                            </tr>\n");
      out.write("\n");
      out.write("                            <tr ng-repeat=\"item in box.boxItems\">\n");
      out.write("                                <td>{{item.name}}</td>\n");
      out.write("                                <td>{{item.itemType}}</td>\n");
      out.write("                                <td>{{item.sku}}</td>\n");
      out.write("                            </tr>\n");
      out.write("                        </table>\n");
      out.write("                    </h1>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </section>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
